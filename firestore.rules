rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // =============================================================================
    // HELPER FUNCTIONS
    // =============================================================================
    
    /// Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    /// Check if user owns the resource
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    /// Check if user is admin
    function isAdmin() {
      return isAuthenticated() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    /// Validate user profile data
    function isValidUserData() {
      return request.resource.data.keys().hasAll(['email', 'createdAt']) &&
             request.resource.data.email is string &&
             request.resource.data.createdAt is timestamp;
    }
    
    /// Validate plant analysis data
    function isValidAnalysisData() {
      return request.resource.data.keys().hasAll(['userId', 'timestamp', 'status']) &&
             request.resource.data.userId is string &&
             request.resource.data.timestamp is timestamp &&
             request.resource.data.status is string &&
             request.resource.data.status in ['pending', 'completed', 'failed'];
    }
    
    /// Check if resource size is reasonable (prevent large data uploads)
    function isValidSize() {
      return request.resource.size < 1024 * 1024; // 1MB limit
    }
    
    // =============================================================================
    // USER PROFILES - Production Security Rules
    // =============================================================================
    
    match /users/{userId} {
      // Users can only read their own profile
      allow read: if isOwner(userId);
      
      // Users can create their own profile with valid data
      allow create: if isOwner(userId) && isValidUserData() && isValidSize();
      
      // Users can update their own profile with valid data
      allow update: if isOwner(userId) && isValidUserData() && isValidSize();
      
      // Users can delete their own profile
      allow delete: if isOwner(userId);
    }
    
    // =============================================================================
    // PLANT ANALYSES - Production Security Rules
    // =============================================================================
    
    match /plant_analyses/{userId}/analyses/{analysisId} {
      // Users can only access their own analyses
      allow read: if isOwner(userId);
      
      // Users can create analyses with valid data
      allow create: if isOwner(userId) && isValidAnalysisData() && isValidSize();
      
      // Users can update their own analyses
      allow update: if isOwner(userId) && isValidAnalysisData() && isValidSize();
      
      // Users can delete their own analyses
      allow delete: if isOwner(userId);
    }
    
    // =============================================================================
    // ADMIN MANAGEMENT - Production Security Rules
    // =============================================================================
    
    match /admins/{adminId} {
      // Only authenticated users can read admin list (for admin checks)
      allow read: if isAuthenticated();
      
      // Only existing admins can manage admin list
      allow write: if isAdmin();
    }
    
    // =============================================================================
    // DEVICE TOKENS - Production Security Rules
    // =============================================================================
    
    match /deviceTokens/{tokenId} {
      // Users can manage their own device tokens
      allow read, write: if isAuthenticated() && 
                          request.auth.uid == resource.data.userId;
    }
  }
} 